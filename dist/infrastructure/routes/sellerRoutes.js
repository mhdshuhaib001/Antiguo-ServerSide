"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const controllers_1 = require("../../providers/controllers");
const RoleBaseAuth_1 = require("../../middilewares/RoleBaseAuth");
const multer_1 = require("../../middilewares/multer");
const router = express_1.default.Router();
router.use((0, RoleBaseAuth_1.userAuth)(["seller", "admin"]));
// Define route handlers
const handleSellerCreater = (req, res) => controllers_1.sellerController.createSeller(req, res);
const handleCreateProduct = (req, res) => controllers_1.sellerController.createProduct(req, res);
const handleSellerProductFetch = (req, res) => controllers_1.sellerController.fetchSellerProducts(req, res);
const handleDeleteProduct = (req, res) => controllers_1.sellerController.deleteProduct(req, res);
const handleFetchAllProduct = (req, res) => controllers_1.sellerController.getAllProducts(req, res);
const handleUpdateSeller = (req, res) => controllers_1.sellerController.updateSeller(req, res);
const handleSellerFetch = (req, res) => controllers_1.sellerController.fetchSeller(req, res);
const handleGetAllOrders = (req, res) => controllers_1.sellerController.getAllOrders(req, res);
const handleUpdateOrderStatus = (req, res) => controllers_1.sellerController.updateOrderStatus(req, res);
const handleFetchAllSeller = (req, res) => controllers_1.sellerController.fetchAllSellers(req, res);
const handleCreateReview = (req, res) => controllers_1.sellerController.createReview(req, res);
const handleGetReviews = (req, res) => controllers_1.sellerController.getReview(req, res);
const handleFetchFullSellerProfile = (req, res) => controllers_1.sellerController.fetchFullSellerProfile(req, res);
const handlegetDashboardData = (req, res) => controllers_1.sellerController.getDashboardData(req, res);
router.post("/createseller", handleSellerCreater);
router.put("/updateseller", multer_1.uploadSingleImage, handleUpdateSeller);
router.post("/createproduct", multer_1.uploadMultipleImages, handleCreateProduct);
router.get("/fetchProducts/:sellerId", (0, RoleBaseAuth_1.userAuth)(["seller", "admin"]), handleSellerProductFetch);
router.delete("/deleteProduct/:productId", (0, RoleBaseAuth_1.userAuth)(["seller", "admin"]), handleDeleteProduct);
// router.get("/fetchAllProducts", handleFetchAllProduct);
router.get("/orders/:sellerId", handleGetAllOrders);
router.get("/getproducts", handleFetchAllProduct);
router.put("/order/:orderId", handleUpdateOrderStatus);
router.get("/get-seller", handleFetchAllSeller);
router.get("/:sellerId", handleSellerFetch);
router.post("/review", handleCreateReview);
router.get("/review/:sellerId", handleGetReviews);
router.get("/:sellerId/full-profile", handleFetchFullSellerProfile);
router.get("/:sellerId/dashboard", handlegetDashboardData);
exports.default = router;
